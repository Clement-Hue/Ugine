#include "keyboard_mapping.h"

ImGuiKey ugine::utils::keycode_to_imguikey(ugine::utils::keycode key)
{
    switch (key)
    {
        case keycode::Tab: return ImGuiKey_Tab;
        case keycode::Left: return ImGuiKey_LeftArrow;
        case keycode::Right: return ImGuiKey_RightArrow;
        case keycode::Up: return ImGuiKey_UpArrow;
        case keycode::Down: return ImGuiKey_DownArrow;
        case keycode::PageUp: return ImGuiKey_PageUp;
        case keycode::PageDown: return ImGuiKey_PageDown;
        case keycode::Home: return ImGuiKey_Home;
        case keycode::End: return ImGuiKey_End;
        case keycode::Insert: return ImGuiKey_Insert;
        case keycode::Delete: return ImGuiKey_Delete;
        case keycode::Backspace: return ImGuiKey_Backspace;
        case keycode::Space: return ImGuiKey_Space;
        case keycode::Enter: return ImGuiKey_Enter;
        case keycode::Escape: return ImGuiKey_Escape;
        case keycode::Apostrophe: return ImGuiKey_Apostrophe;
        case keycode::Comma: return ImGuiKey_Comma;
        case keycode::Minus: return ImGuiKey_Minus;
        case keycode::Period: return ImGuiKey_Period;
        case keycode::Slash: return ImGuiKey_Slash;
        case keycode::Semicolon: return ImGuiKey_Semicolon;
        case keycode::Equal: return ImGuiKey_Equal;
        case keycode::LeftBracket: return ImGuiKey_LeftBracket;
        case keycode::Backslash: return ImGuiKey_Backslash;
        case keycode::RightBracket: return ImGuiKey_RightBracket;
        case keycode::GraveAccent: return ImGuiKey_GraveAccent;
        case keycode::CapsLock: return ImGuiKey_CapsLock;
        case keycode::ScrollLock: return ImGuiKey_ScrollLock;
        case keycode::NumLock: return ImGuiKey_NumLock;
        case keycode::PrintScreen: return ImGuiKey_PrintScreen;
        case keycode::Pause: return ImGuiKey_Pause;
        case keycode::KP0: return ImGuiKey_Keypad0;
        case keycode::KP1: return ImGuiKey_Keypad1;
        case keycode::KP2: return ImGuiKey_Keypad2;
        case keycode::KP3: return ImGuiKey_Keypad3;
        case keycode::KP4: return ImGuiKey_Keypad4;
        case keycode::KP5: return ImGuiKey_Keypad5;
        case keycode::KP6: return ImGuiKey_Keypad6;
        case keycode::KP7: return ImGuiKey_Keypad7;
        case keycode::KP8: return ImGuiKey_Keypad8;
        case keycode::KP9: return ImGuiKey_Keypad9;
        case keycode::KPDecimal: return ImGuiKey_KeypadDecimal;
        case keycode::KPDivide: return ImGuiKey_KeypadDivide;
        case keycode::KPMultiply: return ImGuiKey_KeypadMultiply;
        case keycode::KPSubtract: return ImGuiKey_KeypadSubtract;
        case keycode::KPAdd: return ImGuiKey_KeypadAdd;
        case keycode::KPEnter: return ImGuiKey_KeypadEnter;
        case keycode::KPEqual: return ImGuiKey_KeypadEqual;
        case keycode::LeftControl: return ImGuiKey_LeftCtrl;
        case keycode::LeftShift: return ImGuiKey_LeftShift;
        case keycode::LeftAlt: return ImGuiKey_LeftAlt;
        case keycode::LeftSuper: return ImGuiKey_LeftSuper;
        case keycode::RightControl: return ImGuiKey_RightCtrl;
        case keycode::RightShift: return ImGuiKey_RightShift;
        case keycode::RightAlt: return ImGuiKey_RightAlt;
        case keycode::RightSuper: return ImGuiKey_RightSuper;
        case keycode::Menu: return ImGuiKey_Menu;
        case keycode::D0: return ImGuiKey_0;
        case keycode::D1: return ImGuiKey_1;
        case keycode::D2: return ImGuiKey_2;
        case keycode::D3: return ImGuiKey_3;
        case keycode::D4: return ImGuiKey_4;
        case keycode::D5: return ImGuiKey_5;
        case keycode::D6: return ImGuiKey_6;
        case keycode::D7: return ImGuiKey_7;
        case keycode::D8: return ImGuiKey_8;
        case keycode::D9: return ImGuiKey_9;
        case keycode::A: return ImGuiKey_A;
        case keycode::B: return ImGuiKey_B;
        case keycode::C: return ImGuiKey_C;
        case keycode::D: return ImGuiKey_D;
        case keycode::E: return ImGuiKey_E;
        case keycode::F: return ImGuiKey_F;
        case keycode::G: return ImGuiKey_G;
        case keycode::H: return ImGuiKey_H;
        case keycode::I: return ImGuiKey_I;
        case keycode::J: return ImGuiKey_J;
        case keycode::K: return ImGuiKey_K;
        case keycode::L: return ImGuiKey_L;
        case keycode::M: return ImGuiKey_M;
        case keycode::N: return ImGuiKey_N;
        case keycode::O: return ImGuiKey_O;
        case keycode::P: return ImGuiKey_P;
        case keycode::Q: return ImGuiKey_Q;
        case keycode::R: return ImGuiKey_R;
        case keycode::S: return ImGuiKey_S;
        case keycode::T: return ImGuiKey_T;
        case keycode::U: return ImGuiKey_U;
        case keycode::V: return ImGuiKey_V;
        case keycode::W: return ImGuiKey_W;
        case keycode::X: return ImGuiKey_X;
        case keycode::Y: return ImGuiKey_Y;
        case keycode::Z: return ImGuiKey_Z;
        case keycode::F1: return ImGuiKey_F1;
        case keycode::F2: return ImGuiKey_F2;
        case keycode::F3: return ImGuiKey_F3;
        case keycode::F4: return ImGuiKey_F4;
        case keycode::F5: return ImGuiKey_F5;
        case keycode::F6: return ImGuiKey_F6;
        case keycode::F7: return ImGuiKey_F7;
        case keycode::F8: return ImGuiKey_F8;
        case keycode::F9: return ImGuiKey_F9;
        case keycode::F10: return ImGuiKey_F10;
        case keycode::F11: return ImGuiKey_F11;
        case keycode::F12: return ImGuiKey_F12;
    }
    return ImGuiKey_None;
}

ugine::utils::keycode ugine::utils::sdl_scancode_to_keycode(SDL_Keycode key) {
    switch (key) {
        case SDL_SCANCODE_TAB: return keycode::Tab;
        case SDL_SCANCODE_LEFT: return keycode::Left;
        case SDL_SCANCODE_RIGHT: return keycode::Right;
        case SDL_SCANCODE_UP: return keycode::Up;
        case SDL_SCANCODE_DOWN: return keycode::Down;
        case SDL_SCANCODE_PAGEUP: return keycode::PageUp;
        case SDL_SCANCODE_PAGEDOWN: return keycode::PageDown;
        case SDL_SCANCODE_HOME: return keycode::Home;
        case SDL_SCANCODE_END: return keycode::End;
        case SDL_SCANCODE_INSERT: return keycode::Insert;
        case SDL_SCANCODE_DELETE: return keycode::Delete;
        case SDL_SCANCODE_BACKSPACE: return keycode::Backspace;
        case SDL_SCANCODE_SPACE: return keycode::Space;
        case SDL_SCANCODE_RETURN: return keycode::Enter;
        case SDL_SCANCODE_ESCAPE: return keycode::Escape;
        case SDL_SCANCODE_APOSTROPHE: return keycode::Apostrophe;
        case SDL_SCANCODE_COMMA: return keycode::Comma;
        case SDL_SCANCODE_MINUS: return keycode::Minus;
        case SDL_SCANCODE_PERIOD: return keycode::Period;
        case SDL_SCANCODE_SLASH: return keycode::Slash;
        case SDL_SCANCODE_SEMICOLON: return keycode::Semicolon;
        case SDL_SCANCODE_EQUALS: return keycode::Equal;
        case SDL_SCANCODE_LEFTBRACKET: return keycode::LeftBracket;
        case SDL_SCANCODE_BACKSLASH: return keycode::Backslash;
        case SDL_SCANCODE_RIGHTBRACKET: return keycode::RightBracket;
        case SDL_SCANCODE_GRAVE: return keycode::GraveAccent;
        case SDL_SCANCODE_CAPSLOCK: return keycode::CapsLock;
        case SDL_SCANCODE_SCROLLLOCK: return keycode::ScrollLock;
        case SDL_SCANCODE_NUMLOCKCLEAR: return keycode::NumLock;
        case SDL_SCANCODE_PRINTSCREEN: return keycode::PrintScreen;
        case SDL_SCANCODE_PAUSE: return keycode::Pause;
        case SDL_SCANCODE_KP_0: return keycode::KP0;
        case SDL_SCANCODE_KP_1: return keycode::KP1;
        case SDL_SCANCODE_KP_2: return keycode::KP2;
        case SDL_SCANCODE_KP_3: return keycode::KP3;
        case SDL_SCANCODE_KP_4: return keycode::KP4;
        case SDL_SCANCODE_KP_5: return keycode::KP5;
        case SDL_SCANCODE_KP_6: return keycode::KP6;
        case SDL_SCANCODE_KP_7: return keycode::KP7;
        case SDL_SCANCODE_KP_8: return keycode::KP8;
        case SDL_SCANCODE_KP_9: return keycode::KP9;
        case SDL_SCANCODE_KP_DECIMAL: return keycode::KPDecimal;
        case SDL_SCANCODE_KP_DIVIDE: return keycode::KPDivide;
        case SDL_SCANCODE_KP_MULTIPLY: return keycode::KPMultiply;
        case SDL_SCANCODE_KP_MINUS: return keycode::KPSubtract;
        case SDL_SCANCODE_KP_PLUS: return keycode::KPAdd;
        case SDL_SCANCODE_KP_ENTER: return keycode::KPEnter;
        case SDL_SCANCODE_KP_EQUALS: return keycode::KPEqual;
        case SDL_SCANCODE_LCTRL: return keycode::LeftControl;
        case SDL_SCANCODE_LSHIFT: return keycode::LeftShift;
        case SDL_SCANCODE_LALT: return keycode::LeftAlt;
        case SDL_SCANCODE_LGUI: return keycode::LeftSuper;
        case SDL_SCANCODE_RCTRL: return keycode::RightControl;
        case SDL_SCANCODE_RSHIFT: return keycode::RightShift;
        case SDL_SCANCODE_RALT: return keycode::RightAlt;
        case SDL_SCANCODE_RGUI: return keycode::RightSuper;
        case SDL_SCANCODE_MENU: return keycode::Menu;
        case SDL_SCANCODE_0: return keycode::D0;
        case SDL_SCANCODE_1: return keycode::D1;
        case SDL_SCANCODE_2: return keycode::D2;
        case SDL_SCANCODE_3: return keycode::D3;
        case SDL_SCANCODE_4: return keycode::D4;
        case SDL_SCANCODE_5: return keycode::D5;
        case SDL_SCANCODE_6: return keycode::D6;
        case SDL_SCANCODE_7: return keycode::D7;
        case SDL_SCANCODE_8: return keycode::D8;
        case SDL_SCANCODE_9: return keycode::D9;
        case SDL_SCANCODE_A: return keycode::A;
        case SDL_SCANCODE_B: return keycode::B;
        case SDL_SCANCODE_C: return keycode::C;
        case SDL_SCANCODE_D: return keycode::D;
        case SDL_SCANCODE_E: return keycode::E;
        case SDL_SCANCODE_F: return keycode::F;
        case SDL_SCANCODE_G: return keycode::G;
        case SDL_SCANCODE_H: return keycode::H;
        case SDL_SCANCODE_I: return keycode::I;
        case SDL_SCANCODE_J: return keycode::J;
        case SDL_SCANCODE_K: return keycode::K;
        case SDL_SCANCODE_L: return keycode::L;
        case SDL_SCANCODE_M: return keycode::M;
        case SDL_SCANCODE_N: return keycode::N;
        case SDL_SCANCODE_O: return keycode::O;
        case SDL_SCANCODE_P: return keycode::P;
        case SDL_SCANCODE_Q: return keycode::Q;
        case SDL_SCANCODE_R: return keycode::R;
        case SDL_SCANCODE_S: return keycode::S;
        case SDL_SCANCODE_T: return keycode::T;
        case SDL_SCANCODE_U: return keycode::U;
        case SDL_SCANCODE_V: return keycode::V;
        case SDL_SCANCODE_W: return keycode::W;
        case SDL_SCANCODE_X: return keycode::X;
        case SDL_SCANCODE_Y: return keycode::Y;
        case SDL_SCANCODE_Z: return keycode::Z;
        case SDL_SCANCODE_F1: return keycode::F1;
        case SDL_SCANCODE_F2: return keycode::F2;
        case SDL_SCANCODE_F3: return keycode::F3;
        case SDL_SCANCODE_F4: return keycode::F4;
        case SDL_SCANCODE_F5: return keycode::F5;
        case SDL_SCANCODE_F6: return keycode::F6;
        case SDL_SCANCODE_F7: return keycode::F7;
        case SDL_SCANCODE_F8: return keycode::F8;
        case SDL_SCANCODE_F9: return keycode::F9;
        case SDL_SCANCODE_F10: return keycode::F10;
        case SDL_SCANCODE_F11: return keycode::F11;
        case SDL_SCANCODE_F12: return keycode::F12;
        case SDL_SCANCODE_F13: return keycode::F13;
        case SDL_SCANCODE_F14: return keycode::F14;
        case SDL_SCANCODE_F15: return keycode::F15;
        case SDL_SCANCODE_F16: return keycode::F16;
        case SDL_SCANCODE_F17: return keycode::F17;
        case SDL_SCANCODE_F18: return keycode::F18;
        case SDL_SCANCODE_F19: return keycode::F19;
        case SDL_SCANCODE_F20: return keycode::F20;
        case SDL_SCANCODE_F21: return keycode::F21;
        case SDL_SCANCODE_F22: return keycode::F22;
        case SDL_SCANCODE_F23: return keycode::F23;
        case SDL_SCANCODE_F24: return keycode::F24;
    }
   return  keycode::Unknown;
}

SDL_Scancode ugine::utils::keycode_to_sdl_scancode(ugine::utils::keycode key) {
    switch (key) {
        case keycode::Tab: return SDL_SCANCODE_TAB;
        case keycode::Left: return SDL_SCANCODE_LEFT;
        case keycode::Right: return SDL_SCANCODE_RIGHT;
        case keycode::Up: return SDL_SCANCODE_UP;
        case keycode::Down: return SDL_SCANCODE_DOWN;
        case keycode::PageUp: return SDL_SCANCODE_PAGEUP;
        case keycode::PageDown: return SDL_SCANCODE_PAGEDOWN;
        case keycode::Home: return SDL_SCANCODE_HOME;
        case keycode::End: return SDL_SCANCODE_END;
        case keycode::Insert: return SDL_SCANCODE_INSERT;
        case keycode::Delete: return SDL_SCANCODE_DELETE;
        case keycode::Backspace: return SDL_SCANCODE_BACKSPACE;
        case keycode::Space: return SDL_SCANCODE_SPACE;
        case keycode::Enter: return SDL_SCANCODE_RETURN;
        case keycode::Escape: return SDL_SCANCODE_ESCAPE;
        case keycode::Apostrophe: return SDL_SCANCODE_APOSTROPHE;
        case keycode::Comma: return SDL_SCANCODE_COMMA;
        case keycode::Minus: return SDL_SCANCODE_MINUS;
        case keycode::Period: return SDL_SCANCODE_PERIOD;
        case keycode::Slash: return SDL_SCANCODE_SLASH;
        case keycode::Semicolon: return SDL_SCANCODE_SEMICOLON;
        case keycode::Equal: return SDL_SCANCODE_EQUALS;
        case keycode::LeftBracket: return SDL_SCANCODE_LEFTBRACKET;
        case keycode::Backslash: return SDL_SCANCODE_BACKSLASH;
        case keycode::RightBracket: return SDL_SCANCODE_RIGHTBRACKET;
        case keycode::GraveAccent: return SDL_SCANCODE_GRAVE;
        case keycode::CapsLock: return SDL_SCANCODE_CAPSLOCK;
        case keycode::ScrollLock: return SDL_SCANCODE_SCROLLLOCK;
        case keycode::NumLock: return SDL_SCANCODE_NUMLOCKCLEAR;
        case keycode::PrintScreen: return SDL_SCANCODE_PRINTSCREEN;
        case keycode::Pause: return SDL_SCANCODE_PAUSE;
        case keycode::KP0: return SDL_SCANCODE_KP_0;
        case keycode::KP1: return SDL_SCANCODE_KP_1;
        case keycode::KP2: return SDL_SCANCODE_KP_2;
        case keycode::KP3: return SDL_SCANCODE_KP_3;
        case keycode::KP4: return SDL_SCANCODE_KP_4;
        case keycode::KP5: return SDL_SCANCODE_KP_5;
        case keycode::KP6: return SDL_SCANCODE_KP_6;
        case keycode::KP7: return SDL_SCANCODE_KP_7;
        case keycode::KP8: return SDL_SCANCODE_KP_8;
        case keycode::KP9: return SDL_SCANCODE_KP_9;
        case keycode::KPDecimal: return SDL_SCANCODE_KP_DECIMAL;
        case keycode::KPDivide: return SDL_SCANCODE_KP_DIVIDE;
        case keycode::KPMultiply: return SDL_SCANCODE_KP_MULTIPLY;
        case keycode::KPSubtract: return SDL_SCANCODE_KP_MINUS;
        case keycode::KPAdd: return SDL_SCANCODE_KP_PLUS;
        case keycode::KPEnter: return SDL_SCANCODE_KP_ENTER;
        case keycode::KPEqual: return SDL_SCANCODE_KP_EQUALS;
        case keycode::LeftControl: return SDL_SCANCODE_LCTRL;
        case keycode::LeftShift: return SDL_SCANCODE_LSHIFT;
        case keycode::LeftAlt: return SDL_SCANCODE_LALT;
        case keycode::LeftSuper: return SDL_SCANCODE_LGUI;
        case keycode::RightControl: return SDL_SCANCODE_RCTRL;
        case keycode::RightShift: return SDL_SCANCODE_RSHIFT;
        case keycode::RightAlt: return SDL_SCANCODE_RALT;
        case keycode::RightSuper: return SDL_SCANCODE_RGUI;
        case keycode::Menu: return SDL_SCANCODE_MENU;
        case keycode::D0: return SDL_SCANCODE_0;
        case keycode::D1: return SDL_SCANCODE_1;
        case keycode::D2: return SDL_SCANCODE_2;
        case keycode::D3: return SDL_SCANCODE_3;
        case keycode::D4: return SDL_SCANCODE_4;
        case keycode::D5: return SDL_SCANCODE_5;
        case keycode::D6: return SDL_SCANCODE_6;
        case keycode::D7: return SDL_SCANCODE_7;
        case keycode::D8: return SDL_SCANCODE_8;
        case keycode::D9: return SDL_SCANCODE_9;
        case keycode::A: return SDL_SCANCODE_A;
        case keycode::B: return SDL_SCANCODE_B;
        case keycode::C: return SDL_SCANCODE_C;
        case keycode::D: return SDL_SCANCODE_D;
        case keycode::E: return SDL_SCANCODE_E;
        case keycode::F: return SDL_SCANCODE_F;
        case keycode::G: return SDL_SCANCODE_G;
        case keycode::H: return SDL_SCANCODE_H;
        case keycode::I: return SDL_SCANCODE_I;
        case keycode::J: return SDL_SCANCODE_J;
        case keycode::K: return SDL_SCANCODE_K;
        case keycode::L: return SDL_SCANCODE_L;
        case keycode::M: return SDL_SCANCODE_M;
        case keycode::N: return SDL_SCANCODE_N;
        case keycode::O: return SDL_SCANCODE_O;
        case keycode::P: return SDL_SCANCODE_P;
        case keycode::Q: return SDL_SCANCODE_Q;
        case keycode::R: return SDL_SCANCODE_R;
        case keycode::S: return SDL_SCANCODE_S;
        case keycode::T: return SDL_SCANCODE_T;
        case keycode::U: return SDL_SCANCODE_U;
        case keycode::V: return SDL_SCANCODE_V;
        case keycode::W: return SDL_SCANCODE_W;
        case keycode::X: return SDL_SCANCODE_X;
        case keycode::Y: return SDL_SCANCODE_Y;
        case keycode::Z: return SDL_SCANCODE_Z;
        case keycode::F1: return SDL_SCANCODE_F1;
        case keycode::F2: return SDL_SCANCODE_F2;
        case keycode::F3: return SDL_SCANCODE_F3;
        case keycode::F4: return SDL_SCANCODE_F4;
        case keycode::F5: return SDL_SCANCODE_F5;
        case keycode::F6: return SDL_SCANCODE_F6;
        case keycode::F7: return SDL_SCANCODE_F7;
        case keycode::F8: return SDL_SCANCODE_F8;
        case keycode::F9: return SDL_SCANCODE_F9;
        case keycode::F10: return SDL_SCANCODE_F10;
        case keycode::F11: return SDL_SCANCODE_F11;
        case keycode::F12: return SDL_SCANCODE_F12;
        case keycode::F13: return SDL_SCANCODE_F13;
        case keycode::F14: return SDL_SCANCODE_F14;
        case keycode::F15: return SDL_SCANCODE_F15;
        case keycode::F16: return SDL_SCANCODE_F16;
        case keycode::F17: return SDL_SCANCODE_F17;
        case keycode::F18: return SDL_SCANCODE_F18;
        case keycode::F19: return SDL_SCANCODE_F19;
        case keycode::F20: return SDL_SCANCODE_F20;
        case keycode::F21: return SDL_SCANCODE_F21;
        case keycode::F22: return SDL_SCANCODE_F22;
        case keycode::F23: return SDL_SCANCODE_F23;
        case keycode::F24: return SDL_SCANCODE_F24;
    }
    return SDL_SCANCODE_UNKNOWN;
}
